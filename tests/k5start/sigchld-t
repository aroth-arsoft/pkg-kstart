#!/usr/bin/perl -w
#
# Test for proper SIGCHLD handling in k5start.
#
# Written by Russ Allbery <rra@stanford.edu>
# Copyright 2010 Board of Trustees, Leland Stanford Jr. University
#
# See LICENSE for licensing terms.

use Test::More;

# The full path to the newly-built k5start client.
our $K5START = "$ENV{BUILD}/../k5start";

# The path to our data directory, which contains the keytab to use to test.
our $DATA = "$ENV{BUILD}/data";

# Decide whether we have the configuration to run the tests.
if (-f "$DATA/test.keytab" and -f "$DATA/test.principal") {
    plan tests => 2;
} else {
    plan skip_all => 'no keytab configuration';
    exit 0;
}

# Get the test principal.
my $principal = contents ("$DATA/test.principal");

# Don't overwrite the user's ticket cache.
$ENV{KRB5CCNAME} = 'krb5cc_test';

# Set SIGCHLD to SIG_IGN, which will then be inherited by our child processes.
# We want to test proper k5start handling of SIGCHLD when inheriting a
# non-default handler.
my $start = time;
my $pid = fork;
if (not defined $pid) {
    BAIL_OUT ("cannot fork: $!\n");
} elsif ($pid == 0) {
    $SIG{CHLD} = 'IGNORE';
    exec ($K5START, '-qUf', "$DATA/test.keytab", '-K60',
          '--', 'sh', '-c', 'sleep 1');
}
waitpid ($pid, 0);
is ($?, 0, 'command succeeded');
ok (time < $start + 2, 'k5start got SIGCHLD and woke up properly');
